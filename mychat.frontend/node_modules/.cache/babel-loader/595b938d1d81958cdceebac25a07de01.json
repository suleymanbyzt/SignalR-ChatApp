{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\"; // Version token that will be replaced by the prepack command\n\n/** The version of the SignalR client. */\n\nexport var VERSION = \"5.0.5\";\n/** @private */\n\nvar Arg =\n/** @class */\nfunction () {\n  function Arg() {}\n\n  Arg.isRequired = function (val, name) {\n    if (val === null || val === undefined) {\n      throw new Error(\"The '\" + name + \"' argument is required.\");\n    }\n  };\n\n  Arg.isNotEmpty = function (val, name) {\n    if (!val || val.match(/^\\s*$/)) {\n      throw new Error(\"The '\" + name + \"' argument should not be empty.\");\n    }\n  };\n\n  Arg.isIn = function (val, values, name) {\n    // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n    if (!(val in values)) {\n      throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\n    }\n  };\n\n  return Arg;\n}();\n\nexport { Arg };\n/** @private */\n\nvar Platform =\n/** @class */\nfunction () {\n  function Platform() {}\n\n  Object.defineProperty(Platform, \"isBrowser\", {\n    get: function () {\n      return typeof window === \"object\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Platform, \"isWebWorker\", {\n    get: function () {\n      return typeof self === \"object\" && \"importScripts\" in self;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Platform, \"isNode\", {\n    get: function () {\n      return !this.isBrowser && !this.isWebWorker;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Platform;\n}();\n\nexport { Platform };\n/** @private */\n\nexport function getDataDetail(data, includeContent) {\n  var detail = \"\";\n\n  if (isArrayBuffer(data)) {\n    detail = \"Binary data of length \" + data.byteLength;\n\n    if (includeContent) {\n      detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\n    }\n  } else if (typeof data === \"string\") {\n    detail = \"String data of length \" + data.length;\n\n    if (includeContent) {\n      detail += \". Content: '\" + data + \"'\";\n    }\n  }\n\n  return detail;\n}\n/** @private */\n\nexport function formatArrayBuffer(data) {\n  var view = new Uint8Array(data); // Uint8Array.map only supports returning another Uint8Array?\n\n  var str = \"\";\n  view.forEach(function (num) {\n    var pad = num < 16 ? \"0\" : \"\";\n    str += \"0x\" + pad + num.toString(16) + \" \";\n  }); // Trim of trailing space.\n\n  return str.substr(0, str.length - 1);\n} // Also in signalr-protocol-msgpack/Utils.ts\n\n/** @private */\n\nexport function isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer || // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n/** @private */\n\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent, withCredentials, defaultHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, headers, token, _b, name, value, responseType, response;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          if (!accessTokenFactory) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , accessTokenFactory()];\n\n        case 1:\n          token = _c.sent();\n\n          if (token) {\n            headers = (_a = {}, _a[\"Authorization\"] = \"Bearer \" + token, _a);\n          }\n\n          _c.label = 2;\n\n        case 2:\n          _b = getUserAgentHeader(), name = _b[0], value = _b[1];\n          headers[name] = value;\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\n          responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n          return [4\n          /*yield*/\n          , httpClient.post(url, {\n            content: content,\n            headers: __assign({}, headers, defaultHeaders),\n            responseType: responseType,\n            withCredentials: withCredentials\n          })];\n\n        case 3:\n          response = _c.sent();\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/** @private */\n\nexport function createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(LogLevel.Information);\n  }\n\n  if (logger === null) {\n    return NullLogger.instance;\n  }\n\n  if (logger.log) {\n    return logger;\n  }\n\n  return new ConsoleLogger(logger);\n}\n/** @private */\n\nvar SubjectSubscription =\n/** @class */\nfunction () {\n  function SubjectSubscription(subject, observer) {\n    this.subject = subject;\n    this.observer = observer;\n  }\n\n  SubjectSubscription.prototype.dispose = function () {\n    var index = this.subject.observers.indexOf(this.observer);\n\n    if (index > -1) {\n      this.subject.observers.splice(index, 1);\n    }\n\n    if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\n      this.subject.cancelCallback().catch(function (_) {});\n    }\n  };\n\n  return SubjectSubscription;\n}();\n\nexport { SubjectSubscription };\n/** @private */\n\nvar ConsoleLogger =\n/** @class */\nfunction () {\n  function ConsoleLogger(minimumLogLevel) {\n    this.minimumLogLevel = minimumLogLevel;\n    this.outputConsole = console;\n  }\n\n  ConsoleLogger.prototype.log = function (logLevel, message) {\n    if (logLevel >= this.minimumLogLevel) {\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          this.outputConsole.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        case LogLevel.Warning:\n          this.outputConsole.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        case LogLevel.Information:\n          this.outputConsole.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          this.outputConsole.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n      }\n    }\n  };\n\n  return ConsoleLogger;\n}();\n\nexport { ConsoleLogger };\n/** @private */\n\nexport function getUserAgentHeader() {\n  var userAgentHeaderName = \"X-SignalR-User-Agent\";\n\n  if (Platform.isNode) {\n    userAgentHeaderName = \"User-Agent\";\n  }\n\n  return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n/** @private */\n\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\n  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n  var userAgent = \"Microsoft SignalR/\";\n  var majorAndMinor = version.split(\".\");\n  userAgent += majorAndMinor[0] + \".\" + majorAndMinor[1];\n  userAgent += \" (\" + version + \"; \";\n\n  if (os && os !== \"\") {\n    userAgent += os + \"; \";\n  } else {\n    userAgent += \"Unknown OS; \";\n  }\n\n  userAgent += \"\" + runtime;\n\n  if (runtimeVersion) {\n    userAgent += \"; \" + runtimeVersion;\n  } else {\n    userAgent += \"; Unknown Runtime Version\";\n  }\n\n  userAgent += \")\";\n  return userAgent;\n}\n\nfunction getOsName() {\n  if (Platform.isNode) {\n    switch (process.platform) {\n      case \"win32\":\n        return \"Windows NT\";\n\n      case \"darwin\":\n        return \"macOS\";\n\n      case \"linux\":\n        return \"Linux\";\n\n      default:\n        return process.platform;\n    }\n  } else {\n    return \"\";\n  }\n}\n\nfunction getRuntimeVersion() {\n  if (Platform.isNode) {\n    return process.versions.node;\n  }\n\n  return undefined;\n}\n\nfunction getRuntime() {\n  if (Platform.isNode) {\n    return \"NodeJS\";\n  } else {\n    return \"Browser\";\n  }\n}","map":{"version":3,"sources":["../../src/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\r\n    let headers = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...defaultHeaders},\r\n        responseType,\r\n        withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\nfunction getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}