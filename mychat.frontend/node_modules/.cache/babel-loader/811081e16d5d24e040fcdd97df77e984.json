{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { Platform } from \"./Utils\";\n\nvar FetchHttpClient =\n/** @class */\nfunction (_super) {\n  __extends(FetchHttpClient, _super);\n\n  function FetchHttpClient(logger) {\n    var _this = _super.call(this) || this;\n\n    _this.logger = logger;\n\n    if (typeof fetch === \"undefined\") {\n      // In order to ignore the dynamic require in webpack builds we need to do this magic\n      // @ts-ignore: TS doesn't know about these names\n      var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require; // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\n\n      _this.jar = new (requireFunc(\"tough-cookie\").CookieJar)();\n      _this.fetchType = requireFunc(\"node-fetch\"); // node-fetch doesn't have a nice API for getting and setting cookies\n      // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\n\n      _this.fetchType = requireFunc(\"fetch-cookie\")(_this.fetchType, _this.jar); // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\n\n      _this.abortControllerType = requireFunc(\"abort-controller\");\n    } else {\n      _this.fetchType = fetch.bind(self);\n      _this.abortControllerType = AbortController;\n    }\n\n    return _this;\n  }\n  /** @inheritDoc */\n\n\n  FetchHttpClient.prototype.send = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var abortController, error, timeoutId, msTimeout, response, e_1, content, payload;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check that abort was not signaled before calling send\n            if (request.abortSignal && request.abortSignal.aborted) {\n              throw new AbortError();\n            }\n\n            if (!request.method) {\n              throw new Error(\"No method defined.\");\n            }\n\n            if (!request.url) {\n              throw new Error(\"No url defined.\");\n            }\n\n            abortController = new this.abortControllerType(); // Hook our abortSignal into the abort controller\n\n            if (request.abortSignal) {\n              request.abortSignal.onabort = function () {\n                abortController.abort();\n                error = new AbortError();\n              };\n            }\n\n            timeoutId = null;\n\n            if (request.timeout) {\n              msTimeout = request.timeout;\n              timeoutId = setTimeout(function () {\n                abortController.abort();\n\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n\n                error = new TimeoutError();\n              }, msTimeout);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , this.fetchType(request.url, {\n              body: request.content,\n              cache: \"no-cache\",\n              credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\n              headers: __assign({\n                \"Content-Type\": \"text/plain;charset=UTF-8\",\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              }, request.headers),\n              method: request.method,\n              mode: \"cors\",\n              redirect: \"manual\",\n              signal: abortController.signal\n            })];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            e_1 = _a.sent();\n\n            if (error) {\n              throw error;\n            }\n\n            this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + e_1 + \".\");\n            throw e_1;\n\n          case 4:\n            if (timeoutId) {\n              clearTimeout(timeoutId);\n            }\n\n            if (request.abortSignal) {\n              request.abortSignal.onabort = null;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            if (!response.ok) {\n              throw new HttpError(response.statusText, response.status);\n            }\n\n            content = deserializeContent(response, request.responseType);\n            return [4\n            /*yield*/\n            , content];\n\n          case 6:\n            payload = _a.sent();\n            return [2\n            /*return*/\n            , new HttpResponse(response.status, response.statusText, payload)];\n        }\n      });\n    });\n  };\n\n  FetchHttpClient.prototype.getCookieString = function (url) {\n    var cookies = \"\";\n\n    if (Platform.isNode && this.jar) {\n      // @ts-ignore: unused variable\n      this.jar.getCookies(url, function (e, c) {\n        return cookies = c.join(\"; \");\n      });\n    }\n\n    return cookies;\n  };\n\n  return FetchHttpClient;\n}(HttpClient);\n\nexport { FetchHttpClient };\n\nfunction deserializeContent(response, responseType) {\n  var content;\n\n  switch (responseType) {\n    case \"arraybuffer\":\n      content = response.arrayBuffer();\n      break;\n\n    case \"text\":\n      content = response.text();\n      break;\n\n    case \"blob\":\n    case \"document\":\n    case \"json\":\n      throw new Error(responseType + \" is not supported.\");\n\n    default:\n      content = response.text();\n      break;\n  }\n\n  return content;\n}","map":{"version":3,"sources":["../../src/FetchHttpClient.ts"],"names":[],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAAS,UAAT,EAAqB,SAArB,EAAgC,YAAhC,QAAoD,UAApD;AACA,SAAS,UAAT,EAAkC,YAAlC,QAAsD,cAAtD;AACA,SAAkB,QAAlB,QAAkC,WAAlC;AACA,SAAS,QAAT,QAAyB,SAAzB;;AAEA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAOjC,WAAA,eAAA,CAAmB,MAAnB,EAAkC;AAAlC,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAEI,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;;AAEA,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AAC9B;AACA;AACA,UAAM,WAAW,GAAG,OAAO,mBAAP,KAA+B,UAA/B,GAA4C,uBAA5C,GAAsE,OAA1F,CAH8B,CAK9B;;AACA,MAAA,KAAI,CAAC,GAAL,GAAW,KAAK,WAAW,CAAC,cAAD,CAAZ,CAA8B,SAAlC,GAAX;AACA,MAAA,KAAI,CAAC,SAAL,GAAiB,WAAW,CAAC,YAAD,CAA5B,CAP8B,CAS9B;AACA;;AACA,MAAA,KAAI,CAAC,SAAL,GAAiB,WAAW,CAAC,cAAD,CAAX,CAA4B,KAAI,CAAC,SAAjC,EAA4C,KAAI,CAAC,GAAjD,CAAjB,CAX8B,CAa9B;;AACA,MAAA,KAAI,CAAC,mBAAL,GAA2B,WAAW,CAAC,kBAAD,CAAtC;AACH,KAfD,MAeO;AACH,MAAA,KAAI,CAAC,SAAL,GAAiB,KAAK,CAAC,IAAN,CAAW,IAAX,CAAjB;AACA,MAAA,KAAI,CAAC,mBAAL,GAA2B,eAA3B;AACH;;;AACJ;AAED;;;AACa,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UAAkB,OAAlB,EAAsC;;;;;;;;;AAClC;AACA,gBAAI,OAAO,CAAC,WAAR,IAAuB,OAAO,CAAC,WAAR,CAAoB,OAA/C,EAAwD;AACpD,oBAAM,IAAI,UAAJ,EAAN;AACH;;AAED,gBAAI,CAAC,OAAO,CAAC,MAAb,EAAqB;AACjB,oBAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACH;;AACD,gBAAI,CAAC,OAAO,CAAC,GAAb,EAAkB;AACd,oBAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAEK,YAAA,eAAe,GAAG,IAAI,KAAK,mBAAT,EAAlB,C,CAGN;;AACA,gBAAI,OAAO,CAAC,WAAZ,EAAyB;AACrB,cAAA,OAAO,CAAC,WAAR,CAAoB,OAApB,GAA8B,YAAA;AAC1B,gBAAA,eAAe,CAAC,KAAhB;AACA,gBAAA,KAAK,GAAG,IAAI,UAAJ,EAAR;AACH,eAHD;AAIH;;AAIG,YAAA,SAAS,GAAQ,IAAjB;;AACJ,gBAAI,OAAO,CAAC,OAAZ,EAAqB;AACX,cAAA,SAAS,GAAG,OAAO,CAAC,OAApB;AACN,cAAA,SAAS,GAAG,UAAU,CAAC,YAAA;AACnB,gBAAA,eAAe,CAAC,KAAhB;;AACA,gBAAA,KAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,QAAQ,CAAC,OAAzB,EAAkC,4BAAlC;;AACA,gBAAA,KAAK,GAAG,IAAI,YAAJ,EAAR;AACH,eAJqB,EAInB,SAJmB,CAAtB;AAKH;;;;;;;AAIc,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,SAAL,CAAe,OAAO,CAAC,GAAvB,EAA6B;AAC1C,cAAA,IAAI,EAAE,OAAO,CAAC,OAD4B;AAE1C,cAAA,KAAK,EAAE,UAFmC;AAG1C,cAAA,WAAW,EAAE,OAAO,CAAC,eAAR,KAA4B,IAA5B,GAAmC,SAAnC,GAA+C,aAHlB;AAI1C,cAAA,OAAO,EAAA,QAAA,CAAA;AACH,gCAAgB,0BADb;AAEH,oCAAoB;AAFjB,eAAA,EAGA,OAAO,CAAC,OAHR,CAJmC;AAS1C,cAAA,MAAM,EAAE,OAAO,CAAC,MAT0B;AAU1C,cAAA,IAAI,EAAE,MAVoC;AAW1C,cAAA,QAAQ,EAAE,QAXgC;AAY1C,cAAA,MAAM,EAAE,eAAe,CAAC;AAZkB,aAA7B,CAAN,CAAA;;;AAAX,YAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;;;;;;;;AAeA,gBAAI,KAAJ,EAAW;AACP,oBAAM,KAAN;AACH;;AACD,iBAAK,MAAL,CAAY,GAAZ,CACI,QAAQ,CAAC,OADb,EAEI,8BAA4B,GAA5B,GAA6B,GAFjC;AAIA,kBAAM,GAAN;;;AAEA,gBAAI,SAAJ,EAAe;AACX,cAAA,YAAY,CAAC,SAAD,CAAZ;AACH;;AACD,gBAAI,OAAO,CAAC,WAAZ,EAAyB;AACrB,cAAA,OAAO,CAAC,WAAR,CAAoB,OAApB,GAA8B,IAA9B;AACH;;;;;;;AAGL,gBAAI,CAAC,QAAQ,CAAC,EAAd,EAAkB;AACd,oBAAM,IAAI,SAAJ,CAAc,QAAQ,CAAC,UAAvB,EAAmC,QAAQ,CAAC,MAA5C,CAAN;AACH;;AAEK,YAAA,OAAO,GAAG,kBAAkB,CAAC,QAAD,EAAW,OAAO,CAAC,YAAnB,CAA5B;AACU,mBAAA,CAAA;AAAA;AAAA,cAAM,OAAN,CAAA;;;AAAV,YAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AAEN,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAI,YAAJ,CACH,QAAQ,CAAC,MADN,EAEH,QAAQ,CAAC,UAFN,EAGH,OAHG,CAAP,CAAA;;;;AAKH,GAlFY;;AAoFN,EAAA,eAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,GAAvB,EAAkC;AAC9B,QAAI,OAAO,GAAW,EAAtB;;AACA,QAAI,QAAQ,CAAC,MAAT,IAAmB,KAAK,GAA5B,EAAiC;AAC7B;AACA,WAAK,GAAL,CAAS,UAAT,CAAoB,GAApB,EAAyB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,eAAA,OAAO,GAAG,CAAC,CAAC,IAAF,CAAV,IAAU,CAAV;AAAsB,OAAzD;AACH;;AACD,WAAO,OAAP;AACH,GAPM;;AAQX,SAAA,eAAA;AAAC,CA7HD,CAAqC,UAArC,CAAA;;;;AA+HA,SAAA,kBAAA,CAA4B,QAA5B,EAAgD,YAAhD,EAAyF;AACrF,MAAI,OAAJ;;AACA,UAAQ,YAAR;AACI,SAAK,aAAL;AACI,MAAA,OAAO,GAAG,QAAQ,CAAC,WAAT,EAAV;AACA;;AACJ,SAAK,MAAL;AACI,MAAA,OAAO,GAAG,QAAQ,CAAC,IAAT,EAAV;AACA;;AACJ,SAAK,MAAL;AACA,SAAK,UAAL;AACA,SAAK,MAAL;AACI,YAAM,IAAI,KAAJ,CAAa,YAAY,GAAA,oBAAzB,CAAN;;AACJ;AACI,MAAA,OAAO,GAAG,QAAQ,CAAC,IAAT,EAAV;AACA;AAbR;;AAgBA,SAAO,OAAP;AACH","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as tough from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly jar?: tough.CookieJar;\r\n\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this.jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this.fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this.fetchType = requireFunc(\"fetch-cookie\")(this.fetchType, this.jar);\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this.abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this.fetchType = fetch.bind(self);\r\n            this.abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this.abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this.fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"manual\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this.logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            throw new HttpError(response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this.jar) {\r\n            // @ts-ignore: unused variable\r\n            this.jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}